user mysql: exchange
password user: exchange
Установка mysql:
 sudo apt update
 sudo apt install mysql-server
 
CREATE USER 'alameda' IDENTIFIED BY '1111'; установка нового пользователя mysql c именем alameda  и паролем 1111

GRANT ALL PRIVILEGES ON * . * TO 'alameda';  Установка для пользователя alameda  максимальных прав уровня доступа к базе данных
mysql -h 127.0.0.1 -P 3307 -u root -psecret
FLUSH PRIVILEGES;  Загрузка нового пользователя в базу данных

SELECT user FROM mysql.user;  Проверка всех пользователей в БД

SHOW DATABASES;  Посмотреть текущие БД

CREATE DATABASE mydb;  Создание базы данных с именем mydb

 DROB DATABASE mydb; Удаление базы данных с именем mydb
 
 SHOW TABLES; Список таблиц в нашей базе 
 
 CREATE TABLE proba( id INT(5) AUTO_INCREMENT PRIMARY KEY, name VARCHAR(64));  Создание таблицы м именем  proba состоящий из 2 полей, id  с автоматическим инкрементом  и name состоящий из 64 символов 
 
 SHOW CREATE TABLE proba; показать таблицу с именем  proba 
 
 SELECT * FROM proba;  Показать все из таблицы proba
 
 SELECT * FROM proba WHERE id='2'; Показать записи где поле id = 2
 
 DESCRIBE proba;  Показать поля содержащиеся в таблице
 
 UPDATE proba SET name='kuku' WHERE id='2';  Изменить таблицу proba  присвоить значение полю name='kuku' где id=2
 
 DELETE FROM proba WHERE name='kuku'; удалить из proba где name='kuku'
 
 SELECT COUNT(*) FROM proba;  Посчитать количество строк в таблице 
 
 Путь по которому находятся таблицы:
 
 /var/lib/mysql
 
 help:
 
 ? (\?)            Синоним слова "помощь".
clear (\ c)        Очистить текущий оператор ввода.
connect (\ r)      Повторно подключиться к серверу. Необязательными аргументами являются db и host.
delimiter (\ d)    Установить разделитель операторов.
edit (\ e)         Редактировать команду с помощью $ EDITOR.
ego (\ G)          Отправить команду на сервер mysql, отобразить результат вертикально.
exit (\ q)         Выйти из mysql. То же, что и бросить.
go (\ g)           Отправить команду на сервер mysql.
help (\ h)         Показать эту справку.
nopager (\ n)      Отключить пейджер, печатать в стандартный вывод.
notee (\ t)        Не пишите в Outfile.
пейджер (\ P)      Установить ПЕЙДЖЕР [to_pager]. Распечатайте результаты запроса через PAGER.
print (\ p)        Распечатать текущую команду.
приглашение (\ R)   Измените приглашение mysql.
quit (\ q)         Выйти из mysql.
rehash (\ #)       Перестроить хэш завершения.
источник (\.)      Выполнить файл сценария SQL. Принимает имя файла в качестве аргумента.
status (\ s)       Получить информацию о статусе с сервера.
system (\!)        Выполнить команду системной оболочки.
tee (\ T)          Установить исходный файл [to_outfile]. Добавить все в данный файл.
использовать (\ u) Использовать другую базу данных. Принимает имя базы данных в качестве аргумента.
charset (\ C)      Перейти на другую кодировку. Может понадобиться для обработки бинлога с многобайтовыми кодировками.
предупреждения (\ W) Показывать предупреждения после каждого оператора.
nowarning (\ w)    Не показывать предупреждения после каждого оператора.
resetconnection (\ x) Очистить контекст сеанса.
query_attributes   Устанавливает строковые параметры (имя1 значение1 имя2 значение2 ...) для следующего запроса.

Установка Mysqlworkbench :

sudo apt install mysql-workbench-community
запуск 
mysql-workbench
 

mysql -h 127.0.0.1 -P 3307 -u root -psecret

select * from employees limit 10;  Показать первые 10 строк из таблицы employees 

select distinct firstName from employees;
select count(*) from employees;
select * from employees;
select min(officeCode) from employees;
select max(officeCode) from employees; # Ищет максимум среди поля officeCode
select * from employees where officeCode=1;  # Ищет всех в колонке officeCode=1
select * from employees where officeCode!=1 and officeCode=6;  # Ищет всех в колонке officeCode!=1 and officeCode=6
select * from employees order by firstName asc;  # sort of max
select * from employees order by firstName desc;  # sort of min
select * from employees where firstName="Mami" or firstName="Peter";
select * from employees where firstName in ("Mami", "Peter");
select * from employees where officeCode between 3 and 5;
select * from employees where lastName like '%son';

alter table mytable add pass varchar(32);  add fields in table
alter table mytable drop column pass;      delete column field with name pass

insert into mytable (user_name, user_password, email, date_registered, in_activate) values
('Roman', 678, 'Roman@bk.ru', '1997-3-7', '1'),
('Julia', 678, 'Julia@bk.ru', '1992-7-3', '1'),
('Jacov', 678, 'Jacov@bk.ru', '1995-7-7', '1');

truncate name_tablle;
select distinct user_name from mytable;
select * from mytable limit 2; 
select * from mytable where user_id=2 order by user_password limit 2;
select * from mytable where user_id in (1,2,4);
explain analyze select * from mytable where user_id=2 order by user_password limit 2;
create index myindex On orders(orderNumber);
select c.cl_name, t.user_name from classes c cross join third t; Кросс join Обьединяет все со всеми
 select h.name_house, b.name_book from houseBook h natural join book b;
 select * from houseBook h natural join book b;
  select h.name_house, b.name_book from houseBook h inner join book b ON b.id_book = h.id_book; Обьединение аблиц  с учетом условия
  select h.name_house, b.name_book from houseBook h inner join book b where b.id_book = h.id_book;  ON -> where
    select h.name_house, b.name_book from houseBook h left join book b on b.id_book = h.id_book;	
    select name_house as "Издатель" from houseBook; 
    
    
    
select email as почта, count( email) from emloyees_clone group by(email) having count(email)>1;

'dmurphy@classicmodelcars.com', '2'
'mpatterso@classicmodelcars.com', '2'
'jfirrelli@classicmodelcars.com', '4'
'wpatterson@classicmodelcars.com', '2'
'gbondur@classicmodelcars.com', '2'
'abow@classicmodelcars.com', '2'
'ljennings@classicmodelcars.com', '2'
'lthompson@classicmodelcars.com', '2'
'spatterson@classicmodelcars.com', '2'
'ftseng@classicmodelcars.com', '2'
'gvanauf@classicmodelcars.com', '2'
'lbondur@classicmodelcars.com', '2'
'ghernande@classicmodelcars.com', '2'
'pcastillo@classicmodelcars.com', '2'
'lbott@classicmodelcars.com', '2'
'bjones@classicmodelcars.com', '2'
'afixter@classicmodelcars.com', '2'
'pmarsh@classicmodelcars.com', '2'
'tking@classicmodelcars.com', '2'
'mnishi@classicmodelcars.com', '2'
'ykato@classicmodelcars.com', '2'
'mgerard@classicmodelcars.com', '2'
'Mag@mail.ru', '2'

create view caramba as select email as почта, count( email) from emloyees_clone group by(email) having count(email)=4;

Создаем  свое представление caramba которое является представлением команды  select email as почта, count( email) from emloyees_clone group by(email) having count(email)=4;

теперь все можно заменить select * from caramba;





























